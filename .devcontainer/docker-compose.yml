services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n-network
    # No port exposing - just n8n internal access

  n8n-advanced:
    
    # 1. latest pull
    image: ghcr.io/stardawnai/n8n-advanced:${LATEST_VERSION:-latest}

    #2 First build 
    build: 
      context: ..                           
      dockerfile: .devcontainer/Dockerfile  
    ports:
      - "5678:5678"
    environment:
      # Basic Configuration
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      # Postgres Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=admin
      - DB_POSTGRESDB_PASSWORD=password
      - DB_POSTGRESDB_DATABASE=n8n
      # Authentication - Set to true for production
      - N8N_BASIC_AUTH_ACTIVE=false
      # - N8N_BASIC_AUTH_USER=admin
      # - N8N_BASIC_AUTH_PASSWORD=your-secure-password
      # Performance Optimization
      - N8N_BINARY_DATA_MODE=memory          # Store binary data in memory for speed
      - N8N_PUSH_BACKEND=websocket           # Use websockets for real-time updates
      # Node.js Built-in Modules - Most commonly used
      - NODE_FUNCTION_ALLOW_BUILTIN=crypto,fs,path,util,os,url,events,stream,buffer,timers
      # crypto: encryption, hashing, signing
      # fs: file system operations  
      # path: file path manipulations
      # util: utility functions and debugging
      # os: operating system information
      # url: URL parsing and formatting
      # events: event emitter functionality
      # stream: streaming data processing
      # buffer: binary data handling
      # timers: setTimeout, setInterval functions
      # External Modules - Add specific packages as needed
      - NODE_FUNCTION_ALLOW_EXTERNAL=
      - N8N_RUNNERS_ENABLED=true
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      # Experience
      - WORKFLOWS_DEFAULT_NAME=StardawnAI
      # Python Environment
      #- PYTHONPATH=/opt/python-venv/lib/python3.12/site-packages
      #- PATH=/opt/python-venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - PYTHON_UNBUFFERED=1
    volumes:
      - n8n_data:/home/node/.n8n
      - python_packages:/usr/local/lib/python3.12/site-packages
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - n8n-network
    # Resource Limits - Uncomment and adjust for production
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '2.0'      # Maximum CPU cores
    #       memory: 2G       # Maximum memory
    #     reservations:
    #       cpus: '0.5'      # Minimum CPU cores  
    #       memory: 512M     # Minimum memory

volumes:
  n8n_data:
  postgres_data:
  python_packages:

networks:
  n8n-network:
    driver: bridge